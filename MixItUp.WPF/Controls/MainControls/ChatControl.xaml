<local:MainControlBase x:Class="MixItUp.WPF.Controls.MainControls.ChatControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MixItUp.WPF.Controls.MainControls"
             xmlns:Controls="clr-namespace:MixItUp.WPF.Controls"
             xmlns:ChatControls="clr-namespace:MixItUp.WPF.Controls.Chat"
             xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters"                       
             xmlns:MaterialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d"
                          
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Medium"
             TextElement.FontSize="14"
             FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"   
                          
             d:DesignHeight="600" d:DesignWidth="800">
    <local:MainControlBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Card.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <ContextMenu x:Key="ChatListContextMenu">
                <MenuItem x:Name="MessageCopyMenuItem" Header="Copy Message" Click="MessageCopyMenuItem_Click" />
                <MenuItem x:Name="MessageDeleteMenuItem" Header="Delete Message" Click="MessageDeleteMenuItem_Click" />
                <MenuItem x:Name="MessageWhisperUserMenuItem" Header="Whisper User" Click="MessageWhisperUserMenuItem_Click" />
                <Separator/>
                <MenuItem x:Name="UserInformationMenuItem" Header="User Info" Click="UserInformationMenuItem_Click" />
            </ContextMenu>
            <DataTemplate x:Key="ParticipantsDataTemplate">
                <Border BorderThickness="0,0,0,1" BorderBrush="{DynamicResource MaterialDesignDivider}"
                    Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                    Height="50" Margin="-2,0,0,0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="ParticipantRct" Fill="{DynamicResource PrimaryHueMidBrush}"
                                   Visibility="Hidden"/>
                        <!--Pic-->
                        <Grid Grid.Column="1" Margin="6" SnapsToDevicePixels="True">
                            <Grid.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=ClipEllipse}"/>
                            </Grid.OpacityMask>
                            <Ellipse x:Name="ClipEllipse" Fill="White"/>
                            <MaterialDesign:PackIcon Kind="AccountCircle" SnapsToDevicePixels="True" Width="Auto" Height="Auto"
                                                     Margin="-4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            <Image Source="{Binding Photo, Converter={StaticResource ByteBmpSrcConverter},
                                TargetNullValue={StaticResource BlankImage}}" Stretch="UniformToFill"/>
                        </Grid>
                        <!--Name-->
                        <TextBlock Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left"
                                   Margin="5,0" FontWeight="SemiBold" TextTrimming="CharacterEllipsis"
                                   Text="{Binding Name}" SnapsToDevicePixels="True"/>

                        <!--New Message icon-->
                        <MaterialDesign:PackIcon Name="NewMessageIcon" Grid.Column="3" SnapsToDevicePixels="True"
                                                 VerticalAlignment="Center" HorizontalAlignment="Center"
                                                 Kind="MessageReplyText" Opacity="0.7" Visibility="Hidden"/>
                        <!--Typing icon-->
                        <MaterialDesign:PackIcon Name="TypingIcon" Grid.Column="3" SnapsToDevicePixels="True"
                                                 VerticalAlignment="Center" HorizontalAlignment="Center"
                                                 Kind="Feather" Opacity="0.8" Visibility="Hidden"/>

                        <!--Online-->
                        <Ellipse Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                 Width="8" Height="8">
                            <Ellipse.Style>
                                <Style TargetType="Ellipse">
                                    <Setter Property="Fill" Value="#F44336"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding DataContext.IsConnected, 
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" Value="True"/>
                                                <Condition Binding="{Binding IsLoggedIn}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Fill" Value="#64DD17"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>
                    </Grid>
                </Border>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding HasSentNewMessage}" Value="True">
                        <Setter TargetName="NewMessageIcon" Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsTyping}" Value="True">
                        <Setter TargetName="NewMessageIcon" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="TypingIcon" Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=IsSelected,
                        RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}" Value="true">
                        <Setter Property="Visibility" TargetName="ParticipantRct" Value="Visible"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ResourceDictionary>        
    </local:MainControlBase.Resources>

    <Grid>
        <GroupBox Grid.Row="0">
            <GroupBox.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Grid Height="20" Grid.Column="0" HorizontalAlignment="Center" Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Button x:Name="PopOutChatButton" Grid.Row="0" Visibility="Visible" HorizontalAlignment="Center" Margin="-6" Style="{StaticResource MaterialDesignRaisedLightButton}" Click="PopOutChatButton_Click">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" VerticalAlignment="Center">Pop Out</TextBlock>

                                <MaterialDesign:PackIcon Grid.Column="2" Kind="Launch" Height="24" Width="24" VerticalAlignment="Center" Foreground="{StaticResource PrimaryHueLightForegroundBrush}" />
                            </Grid>
                        </Button>

                        <Button x:Name="ChatClearMessagesButton" Grid.Column="2" Width="100" Margin="-6" Style="{StaticResource MaterialDesignRaisedLightButton}" Click="ChatClearMessagesButton_Click">Clear Chat</Button>

                        <Button x:Name="DisableChatButton" Grid.Column="4" Width="115" Margin="-6" Style="{StaticResource MaterialDesignRaisedLightButton}" Click="DisableChatButton_Click">Disable Chat</Button>
                        <Button x:Name="EnableChatButton" Grid.Column="4" Width="115" Margin="-6" Style="{StaticResource MaterialDesignRaisedLightButton}" Click="EnableChatButton_Click" Visibility="Collapsed">Enable Chat</Button>

                    </Grid>

                    <Grid x:Name="ViewerChatterNumbersGrid" Grid.Column="2" HorizontalAlignment="Center" Height="20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <MaterialDesign:PackIcon Kind="Eye" Grid.Column="0" Foreground="{StaticResource WhiteColor}" />
                        <TextBlock Grid.Column="2" x:Name="ViewersCountTextBlock" Foreground="{StaticResource WhiteColor}">0</TextBlock>

                        <MaterialDesign:PackIcon Kind="Message" Grid.Column="4" Foreground="{StaticResource WhiteColor}" />
                        <TextBlock Grid.Column="6" x:Name="ChatCountTextBlock" Foreground="{StaticResource WhiteColor}">0</TextBlock>

                    </Grid>

                </Grid>
            </GroupBox.Header>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <ListView x:Name="ChatList" Grid.Row="0" ContextMenu="{StaticResource ChatListContextMenu}" ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch" ScrollViewer.ScrollChanged="ChatList_ScrollChanged">
                        <ListView.Resources>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollContentPresenter}, Path=ActualWidth}" />
                            </Style>
                        </ListView.Resources>

                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Padding" Value="0"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>

                    <Button x:Name="ChatLockButton" Margin="0,0,20,0" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" HorizontalAlignment="Right" Grid.Row="0" VerticalAlignment="Bottom" Opacity="0.3" Click="ChatLockButton_Click" MouseEnter="ChatLockButton_MouseEnter" MouseLeave="ChatLockButton_MouseLeave">
                        <MaterialDesign:PackIcon x:Name="ChatLockButtonIcon" Kind="LockOutline" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Button>

                    <Grid Grid.Row="1" Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ComboBox x:Name="SendChatAsComboBox" Grid.Column="1" MaterialDesign:HintAssist.Hint="Send As" Width="80" />

                        <TextBox x:Name="ChatMessageTextBox" Grid.Column="3" TextChanged="ChatMessageTextBox_TextChanged" PreviewKeyDown="ChatMessageTextBox_PreviewKeyDown" KeyDown="ChatMessageTextBox_KeyDown" MaterialDesign:HintAssist.Hint="Chat Message" Style="{StaticResource MaterialDesignFloatingHintTextBox}" />

                        <Button x:Name="SendChatMessageButton" Grid.Column="4" Width="70" Click="SendChatMessageButton_Click">Send</Button>
                    </Grid>
                </Grid>

                <GridSplitter x:Name="ChatSplitter" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="5" />

                <Border Grid.Column="2" BorderThickness="0,0,1,0" SnapsToDevicePixels="True" BorderBrush="{DynamicResource MaterialDesignDivider}">
                    <ListBox x:Name="UserList" Grid.Column="2" ItemTemplate="{DynamicResource ParticipantsDataTemplate}" ItemContainerStyle="{DynamicResource ParticipantsListBoxItemStyle}"
                     SelectedItem="{Binding SelectedParticipant}" VirtualizingPanel.VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True" ScrollViewer.VerticalScrollBarVisibility="Visible" HorizontalContentAlignment="Stretch" SelectionChanged="UserList_SelectionChanged" Width="200" />
                </Border>
            </Grid>

        </GroupBox>

        <Canvas>
            <MaterialDesign:PopupBox ToggleContent="" x:Name="UsernameIntellisense" StaysOpen="False">
                <Grid Margin="2,0,2,0" x:Name="UsernameIntellisenseContent">
                    <ListBox x:Name="UsernameIntellisenseListBox" ItemContainerStyle="{StaticResource BorderedListBoxItem}" SelectionMode="Single" PreviewMouseUp="UsernameIntellisenseListBox_PreviewMouseUp">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <ChatControls:ChatUserControl/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </MaterialDesign:PopupBox>

            <MaterialDesign:PopupBox ToggleContent="" x:Name="EmoticonIntellisense" StaysOpen="False">
                <Grid Margin="2,0,2,0" x:Name="EmoticonIntellisenseContent">
                    <ListBox x:Name="EmoticonIntellisenseListBox" ItemContainerStyle="{StaticResource BorderedListBoxItem}" SelectionMode="Single" PreviewMouseUp="EmoticonIntellisenseListBox_PreviewMouseUp">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <ChatControls:EmoticonControl ShowText="True"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </MaterialDesign:PopupBox>
        </Canvas>
    </Grid>
</local:MainControlBase>
